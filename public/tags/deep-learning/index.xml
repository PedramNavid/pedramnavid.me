<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning on Pedram Navid</title>
    <link>/tags/deep-learning/</link>
    <description>Recent content in Deep Learning on Pedram Navid</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sun, 25 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Trump RNN - Generating Presidential Speeches using Recurrent Neural Networks</title>
      <link>/2018/03/25/trump-rnn-generating-presidential-speeches-using-recurrent-neural-networks/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/25/trump-rnn-generating-presidential-speeches-using-recurrent-neural-networks/</guid>
      <description>With Trump&amp;rsquo;s victory, I thought it would be interesting to scope out some Trump-related datasets and get some practice with different machine learning algorithms. I&amp;rsquo;ve seen some work with generative text with Markov Chains, but thought a Recurrent Neural Network might be a little more fun to play with.
Web Scraping Grabbing a large enough dataset was the first problem to solve. I did find a Github that had some Trump speeches but the data was 3 months old as of this post.</description>
    </item>
    
  </channel>
</rss>